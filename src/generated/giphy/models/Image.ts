/* tslint:disable */
/* eslint-disable */
/**
 * Giphy
 * Giphy API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@giphy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Image
 */
export interface Image {
    /**
     * The number of frames in this GIF.
     * @type {string}
     * @memberof Image
     */
    frames?: string;
    /**
     * The height of this GIF in pixels.
     * @type {string}
     * @memberof Image
     */
    height?: string;
    /**
     * The URL for this GIF in .MP4 format.
     * @type {string}
     * @memberof Image
     */
    mp4?: string;
    /**
     * The size in bytes of the .MP4 file corresponding to this GIF.
     * @type {string}
     * @memberof Image
     */
    mp4Size?: string;
    /**
     * The size of this GIF in bytes.
     * @type {string}
     * @memberof Image
     */
    size?: string;
    /**
     * The publicly-accessible direct URL for this GIF.
     * @type {string}
     * @memberof Image
     */
    url?: string;
    /**
     * The URL for this GIF in .webp format.
     * @type {string}
     * @memberof Image
     */
    webp?: string;
    /**
     * The size in bytes of the .webp file corresponding to this GIF.
     * @type {string}
     * @memberof Image
     */
    webpSize?: string;
    /**
     * The width of this GIF in pixels.
     * @type {string}
     * @memberof Image
     */
    width?: string;
}

export function ImageFromJSON(json: any): Image {
    return ImageFromJSONTyped(json, false);
}

export function ImageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Image {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'frames': !exists(json, 'frames') ? undefined : json['frames'],
        'height': !exists(json, 'height') ? undefined : json['height'],
        'mp4': !exists(json, 'mp4') ? undefined : json['mp4'],
        'mp4Size': !exists(json, 'mp4_size') ? undefined : json['mp4_size'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'webp': !exists(json, 'webp') ? undefined : json['webp'],
        'webpSize': !exists(json, 'webp_size') ? undefined : json['webp_size'],
        'width': !exists(json, 'width') ? undefined : json['width'],
    };
}

export function ImageToJSON(value?: Image | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'frames': value.frames,
        'height': value.height,
        'mp4': value.mp4,
        'mp4_size': value.mp4Size,
        'size': value.size,
        'url': value.url,
        'webp': value.webp,
        'webp_size': value.webpSize,
        'width': value.width,
    };
}



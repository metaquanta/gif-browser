/* tslint:disable */
/* eslint-disable */
/**
 * Giphy
 * Giphy API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@giphy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Image,
    ImageFromJSON,
    ImageFromJSONTyped,
    ImageToJSON,
} from './';

/**
 * An object containing data for various available formats and sizes of this GIF.
 * @export
 * @interface GifImages
 */
export interface GifImages {
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    downsized?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    downsizedLarge?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    downsizedMedium?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    downsizedSmall?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    downsizedStill?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    fixedHeight?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    fixedHeightDownsampled?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    fixedHeightSmall?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    fixedHeightSmallStill?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    fixedHeightStill?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    fixedWidth?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    fixedWidthDownsampled?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    fixedWidthSmall?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    fixedWidthSmallStill?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    fixedWidthStill?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    looping?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    original?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    originalStill?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    preview?: Image;
    /**
     * 
     * @type {Image}
     * @memberof GifImages
     */
    previewGif?: Image;
}

export function GifImagesFromJSON(json: any): GifImages {
    return GifImagesFromJSONTyped(json, false);
}

export function GifImagesFromJSONTyped(json: any, ignoreDiscriminator: boolean): GifImages {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'downsized': !exists(json, 'downsized') ? undefined : ImageFromJSON(json['downsized']),
        'downsizedLarge': !exists(json, 'downsized_large') ? undefined : ImageFromJSON(json['downsized_large']),
        'downsizedMedium': !exists(json, 'downsized_medium') ? undefined : ImageFromJSON(json['downsized_medium']),
        'downsizedSmall': !exists(json, 'downsized_small') ? undefined : ImageFromJSON(json['downsized_small']),
        'downsizedStill': !exists(json, 'downsized_still') ? undefined : ImageFromJSON(json['downsized_still']),
        'fixedHeight': !exists(json, 'fixed_height') ? undefined : ImageFromJSON(json['fixed_height']),
        'fixedHeightDownsampled': !exists(json, 'fixed_height_downsampled') ? undefined : ImageFromJSON(json['fixed_height_downsampled']),
        'fixedHeightSmall': !exists(json, 'fixed_height_small') ? undefined : ImageFromJSON(json['fixed_height_small']),
        'fixedHeightSmallStill': !exists(json, 'fixed_height_small_still') ? undefined : ImageFromJSON(json['fixed_height_small_still']),
        'fixedHeightStill': !exists(json, 'fixed_height_still') ? undefined : ImageFromJSON(json['fixed_height_still']),
        'fixedWidth': !exists(json, 'fixed_width') ? undefined : ImageFromJSON(json['fixed_width']),
        'fixedWidthDownsampled': !exists(json, 'fixed_width_downsampled') ? undefined : ImageFromJSON(json['fixed_width_downsampled']),
        'fixedWidthSmall': !exists(json, 'fixed_width_small') ? undefined : ImageFromJSON(json['fixed_width_small']),
        'fixedWidthSmallStill': !exists(json, 'fixed_width_small_still') ? undefined : ImageFromJSON(json['fixed_width_small_still']),
        'fixedWidthStill': !exists(json, 'fixed_width_still') ? undefined : ImageFromJSON(json['fixed_width_still']),
        'looping': !exists(json, 'looping') ? undefined : ImageFromJSON(json['looping']),
        'original': !exists(json, 'original') ? undefined : ImageFromJSON(json['original']),
        'originalStill': !exists(json, 'original_still') ? undefined : ImageFromJSON(json['original_still']),
        'preview': !exists(json, 'preview') ? undefined : ImageFromJSON(json['preview']),
        'previewGif': !exists(json, 'preview_gif') ? undefined : ImageFromJSON(json['preview_gif']),
    };
}

export function GifImagesToJSON(value?: GifImages | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'downsized': ImageToJSON(value.downsized),
        'downsized_large': ImageToJSON(value.downsizedLarge),
        'downsized_medium': ImageToJSON(value.downsizedMedium),
        'downsized_small': ImageToJSON(value.downsizedSmall),
        'downsized_still': ImageToJSON(value.downsizedStill),
        'fixed_height': ImageToJSON(value.fixedHeight),
        'fixed_height_downsampled': ImageToJSON(value.fixedHeightDownsampled),
        'fixed_height_small': ImageToJSON(value.fixedHeightSmall),
        'fixed_height_small_still': ImageToJSON(value.fixedHeightSmallStill),
        'fixed_height_still': ImageToJSON(value.fixedHeightStill),
        'fixed_width': ImageToJSON(value.fixedWidth),
        'fixed_width_downsampled': ImageToJSON(value.fixedWidthDownsampled),
        'fixed_width_small': ImageToJSON(value.fixedWidthSmall),
        'fixed_width_small_still': ImageToJSON(value.fixedWidthSmallStill),
        'fixed_width_still': ImageToJSON(value.fixedWidthStill),
        'looping': ImageToJSON(value.looping),
        'original': ImageToJSON(value.original),
        'original_still': ImageToJSON(value.originalStill),
        'preview': ImageToJSON(value.preview),
        'preview_gif': ImageToJSON(value.previewGif),
    };
}


